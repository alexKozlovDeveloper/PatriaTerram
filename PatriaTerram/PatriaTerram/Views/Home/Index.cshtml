@model PatriaTerram.Core.Models.Palette

@{
    ViewBag.Title = "Patria Terram";


}

<div class="map-container">
    <table>
        @for (int i = 0; i < Model.Width; i++)
        {
            <tr>
                @for (int j = 0; j < Model.Height; j++)
                {
                    <td>
                        <div class="map-cell">
                            @for (int k = 0; k < Model[i, j].Components.Count; k++)
                            {
                                int r = (int)(Model[i, j].Components[k].Terrain.ColorR + (Model[i, j].Components[k].Value - 128) / 2.5);
                                int g = (int)(Model[i, j].Components[k].Terrain.ColorG + (Model[i, j].Components[k].Value - 128) / 2.5);
                                int b = (int)(Model[i, j].Components[k].Terrain.ColorB + (Model[i, j].Components[k].Value - 128) / 2.5);

                                <div class="map-cell-item terrain @Model[i, j].Components[k].Terrain.Name" style='background-color: rgb(@r, @g, @b);'>
                                    <div class="map-cell-item-value">@Model[i, j].Components[k].Value</div>
                                </div>
                            }

                            @{
                                Model[i, j].GetPointColor(out int red, out int green, out int blue);
                                <div class="map-cell-item terrain result" style='background-color: rgb(@red, @green, @blue);'></div>
                            }

                            @foreach (var condition in Model[i, j].BuildingConditions)
                            {
                                var r = (int)((condition.Value / (ViewBag.maxCondition * 1.0)) * 250);
                                <div class="map-cell-item building-conditions @condition.BuildingType" style='background-color: rgb(@r, 0, 0 );'>
                                    <div class="map-cell-item-value">@condition.Value</div>
                                </div>

                            }
                        </div>
                    </td>
                }
            </tr>
        }
    </table>
</div>

<div>
    <div>
        Terrains:

        @foreach (var item in PatriaTerram.Core.Configurations.Configs.Terrains)
        {
            <div class="layer-button" onclick="selectTerain('@item.Key')">@item.Key</div>
        }

        <div class="layer-button" onclick="selectTerain('result')">All terrains</div>
        <div class="layer-button" onclick="showItems('.map-cell-item')">Show all terrains</div>
        <div class="layer-button" onclick="hideItems('.map-cell-item')">Hide all terrains</div>
        <div class="layer-button" onclick="showItems('.map-cell-item-value')">Show Values</div>
        <div class="layer-button" onclick="hideItems('.map-cell-item-value')">Hide Values</div>

    </div>
    <div>
        Conditions:

        <div class="layer-button" onclick="showItems('.building-conditions')">Show Conditions</div>
        <div class="layer-button" onclick="hideItems('.building-conditions')">Hide Conditions</div>

    </div>
</div>

<script>

    function hideItems(selector) {
        $(selector).addClass("hidden-cell-item")
    }

    function showItems(selector) {
        $(selector).removeClass("hidden-cell-item")
    }

    function selectTerain(name) {
        hideItems('.map-cell-item');

        $("." + name).removeClass("hidden-cell-item")
    }

</script>





